{"id":"node_modules/ipfs-utils/src/http.js","dependencies":[{"name":"/Users/gebruiker/Desktop/car-information-dapp/src/package.json","includedInParent":true,"mtime":1679887086003},{"name":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/ipfs-utils/package.json","includedInParent":true,"mtime":1679887084458},{"name":"./http/fetch","loc":{"line":4,"column":44,"index":88},"parent":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/ipfs-utils/src/http.js","resolved":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/ipfs-utils/src/http/fetch.browser.js"},{"name":"./http/error","loc":{"line":5,"column":44,"index":148},"parent":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/ipfs-utils/src/http.js","resolved":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/ipfs-utils/src/http/error.js"},{"name":"merge-options","loc":{"line":6,"column":22,"index":186},"parent":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/ipfs-utils/src/http.js","resolved":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/merge-options/index.js"},{"name":"iso-url","loc":{"line":7,"column":41,"index":276},"parent":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/ipfs-utils/src/http.js","resolved":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/iso-url/index.js"},{"name":"native-abort-controller","loc":{"line":8,"column":36,"index":323},"parent":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/ipfs-utils/src/http.js","resolved":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/native-abort-controller/src/index.js"},{"name":"any-signal","loc":{"line":9,"column":26,"index":376},"parent":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/ipfs-utils/src/http.js","resolved":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/any-signal/index.js"}],"generated":{"js":"/* eslint-disable no-undef */\n'use strict'\n\nconst { fetch, Request, Headers } = require('./http/fetch')\nconst { TimeoutError, HTTPError } = require('./http/error')\nconst merge = require('merge-options').bind({ ignoreUndefined: true })\nconst { URL, URLSearchParams } = require('iso-url')\nconst { AbortController } = require('native-abort-controller')\nconst anySignal = require('any-signal')\n\n/**\n * @typedef {import('stream').Readable} NodeReadableStream\n * @typedef {import('./types').HTTPOptions} HTTPOptions\n * @typedef {import('./types').ExtendedResponse} ExtendedResponse\n */\n\n/**\n * @template TResponse\n * @param {Promise<TResponse>} promise\n * @param {number | undefined} ms\n * @param {AbortController} abortController\n * @returns {Promise<TResponse>}\n */\nconst timeout = (promise, ms, abortController) => {\n  if (ms === undefined) {\n    return promise\n  }\n\n  const start = Date.now()\n\n  const timedOut = () => {\n    const time = Date.now() - start\n\n    return time >= ms\n  }\n\n  return new Promise((resolve, reject) => {\n    const timeoutID = setTimeout(() => {\n      if (timedOut()) {\n        reject(new TimeoutError())\n        abortController.abort()\n      }\n    }, ms)\n\n    /**\n     * @param {(value: any) => void } next\n     */\n    const after = (next) => {\n      /**\n       * @param {any} res\n       */\n      const fn = (res) => {\n        clearTimeout(timeoutID)\n\n        if (timedOut()) {\n          reject(new TimeoutError())\n          return\n        }\n\n        next(res)\n      }\n      return fn\n    }\n\n    promise\n      .then(after(resolve), after(reject))\n  })\n}\n\nconst defaults = {\n  throwHttpErrors: true,\n  credentials: 'same-origin'\n}\n\nclass HTTP {\n  /**\n   *\n   * @param {HTTPOptions} options\n   */\n  constructor (options = {}) {\n    /** @type {HTTPOptions} */\n    this.opts = merge(defaults, options)\n  }\n\n  /**\n   * Fetch\n   *\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   * @returns {Promise<ExtendedResponse>}\n   */\n  async fetch (resource, options = {}) {\n    /** @type {HTTPOptions} */\n    const opts = merge(this.opts, options)\n    const headers = new Headers(opts.headers)\n\n    // validate resource type\n    if (typeof resource !== 'string' && !(resource instanceof URL || resource instanceof Request)) {\n      throw new TypeError('`resource` must be a string, URL, or Request')\n    }\n\n    const url = new URL(resource.toString(), opts.base)\n\n    const {\n      searchParams,\n      transformSearchParams,\n      json\n    } = opts\n\n    if (searchParams) {\n      if (typeof transformSearchParams === 'function') {\n        // @ts-ignore\n        url.search = transformSearchParams(new URLSearchParams(opts.searchParams))\n      } else {\n        // @ts-ignore\n        url.search = new URLSearchParams(opts.searchParams)\n      }\n    }\n\n    if (json) {\n      opts.body = JSON.stringify(opts.json)\n      headers.set('content-type', 'application/json')\n    }\n\n    const abortController = new AbortController()\n    // @ts-ignore\n    const signal = anySignal([abortController.signal, opts.signal])\n\n    const response = await timeout(\n      fetch(\n        url.toString(),\n        {\n          ...opts,\n          signal,\n          timeout: undefined,\n          headers\n        }\n      ),\n      opts.timeout,\n      abortController\n    )\n\n    if (!response.ok && opts.throwHttpErrors) {\n      if (opts.handleError) {\n        await opts.handleError(response)\n      }\n      throw new HTTPError(response)\n    }\n\n    response.iterator = function () {\n      return fromStream(response.body)\n    }\n\n    response.ndjson = async function * () {\n      for await (const chunk of ndjson(response.iterator())) {\n        if (options.transform) {\n          yield options.transform(chunk)\n        } else {\n          yield chunk\n        }\n      }\n    }\n\n    return response\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  post (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'POST' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  get (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'GET' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  put (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'PUT' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  delete (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'DELETE' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  options (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'OPTIONS' })\n  }\n}\n\n/**\n * Parses NDJSON chunks from an iterator\n *\n * @param {AsyncIterable<Uint8Array>} source\n * @returns {AsyncIterable<any>}\n */\nconst ndjson = async function * (source) {\n  const decoder = new TextDecoder()\n  let buf = ''\n\n  for await (const chunk of source) {\n    buf += decoder.decode(chunk, { stream: true })\n    const lines = buf.split(/\\r?\\n/)\n\n    for (let i = 0; i < lines.length - 1; i++) {\n      const l = lines[i].trim()\n      if (l.length > 0) {\n        yield JSON.parse(l)\n      }\n    }\n    buf = lines[lines.length - 1]\n  }\n  buf += decoder.decode()\n  buf = buf.trim()\n  if (buf.length !== 0) {\n    yield JSON.parse(buf)\n  }\n}\n\n/**\n * Stream to AsyncIterable\n *\n * @template TChunk\n * @param {ReadableStream<TChunk> | NodeReadableStream | null} source\n * @returns {AsyncIterable<TChunk>}\n */\nconst fromStream = (source) => {\n  // Workaround for https://github.com/node-fetch/node-fetch/issues/766\n  if (isNodeReadableStream(source)) {\n    const iter = source[Symbol.asyncIterator]()\n    return {\n      [Symbol.asyncIterator] () {\n        return {\n          next: iter.next.bind(iter),\n          return (value) {\n            source.destroy()\n            if (typeof iter.return === 'function') {\n              return iter.return()\n            }\n            return Promise.resolve({ done: true, value })\n          }\n        }\n      }\n    }\n  }\n\n  if (isWebReadableStream(source)) {\n    const reader = source.getReader()\n    return (async function * () {\n      try {\n        while (true) {\n          // Read from the stream\n          const { done, value } = await reader.read()\n          // Exit if we're done\n          if (done) return\n          // Else yield the chunk\n          if (value) {\n            yield value\n          }\n        }\n      } finally {\n        reader.releaseLock()\n      }\n    })()\n  }\n\n  if (isAsyncIterable(source)) {\n    return source\n  }\n\n  throw new TypeError('Body can\\'t be converted to AsyncIterable')\n}\n\n/**\n * Check if it's an AsyncIterable\n *\n * @template {unknown} TChunk\n * @template {any} Other\n * @param {Other|AsyncIterable<TChunk>} value\n * @returns {value is AsyncIterable<TChunk>}\n */\nconst isAsyncIterable = (value) => {\n  return typeof value === 'object' &&\n  value !== null &&\n  typeof /** @type {any} */(value)[Symbol.asyncIterator] === 'function'\n}\n\n/**\n * Check for web readable stream\n *\n * @template {unknown} TChunk\n * @template {any} Other\n * @param {Other|ReadableStream<TChunk>} value\n * @returns {value is ReadableStream<TChunk>}\n */\nconst isWebReadableStream = (value) => {\n  return value && typeof /** @type {any} */(value).getReader === 'function'\n}\n\n/**\n * @param {any} value\n * @returns {value is NodeReadableStream}\n */\nconst isNodeReadableStream = (value) =>\n  Object.prototype.hasOwnProperty.call(value, 'readable') &&\n  Object.prototype.hasOwnProperty.call(value, 'writable')\n\nHTTP.HTTPError = HTTPError\nHTTP.TimeoutError = TimeoutError\nHTTP.streamToAsyncIterator = fromStream\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.post = (resource, options) => new HTTP(options).post(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.get = (resource, options) => new HTTP(options).get(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.put = (resource, options) => new HTTP(options).put(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.delete = (resource, options) => new HTTP(options).delete(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.options = (resource, options) => new HTTP(options).options(resource, options)\n\nmodule.exports = HTTP\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/ipfs-utils/src/http.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}}],"sources":{"node_modules/ipfs-utils/src/http.js":"/* eslint-disable no-undef */\n'use strict'\n\nconst { fetch, Request, Headers } = require('./http/fetch')\nconst { TimeoutError, HTTPError } = require('./http/error')\nconst merge = require('merge-options').bind({ ignoreUndefined: true })\nconst { URL, URLSearchParams } = require('iso-url')\nconst { AbortController } = require('native-abort-controller')\nconst anySignal = require('any-signal')\n\n/**\n * @typedef {import('stream').Readable} NodeReadableStream\n * @typedef {import('./types').HTTPOptions} HTTPOptions\n * @typedef {import('./types').ExtendedResponse} ExtendedResponse\n */\n\n/**\n * @template TResponse\n * @param {Promise<TResponse>} promise\n * @param {number | undefined} ms\n * @param {AbortController} abortController\n * @returns {Promise<TResponse>}\n */\nconst timeout = (promise, ms, abortController) => {\n  if (ms === undefined) {\n    return promise\n  }\n\n  const start = Date.now()\n\n  const timedOut = () => {\n    const time = Date.now() - start\n\n    return time >= ms\n  }\n\n  return new Promise((resolve, reject) => {\n    const timeoutID = setTimeout(() => {\n      if (timedOut()) {\n        reject(new TimeoutError())\n        abortController.abort()\n      }\n    }, ms)\n\n    /**\n     * @param {(value: any) => void } next\n     */\n    const after = (next) => {\n      /**\n       * @param {any} res\n       */\n      const fn = (res) => {\n        clearTimeout(timeoutID)\n\n        if (timedOut()) {\n          reject(new TimeoutError())\n          return\n        }\n\n        next(res)\n      }\n      return fn\n    }\n\n    promise\n      .then(after(resolve), after(reject))\n  })\n}\n\nconst defaults = {\n  throwHttpErrors: true,\n  credentials: 'same-origin'\n}\n\nclass HTTP {\n  /**\n   *\n   * @param {HTTPOptions} options\n   */\n  constructor (options = {}) {\n    /** @type {HTTPOptions} */\n    this.opts = merge(defaults, options)\n  }\n\n  /**\n   * Fetch\n   *\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   * @returns {Promise<ExtendedResponse>}\n   */\n  async fetch (resource, options = {}) {\n    /** @type {HTTPOptions} */\n    const opts = merge(this.opts, options)\n    const headers = new Headers(opts.headers)\n\n    // validate resource type\n    if (typeof resource !== 'string' && !(resource instanceof URL || resource instanceof Request)) {\n      throw new TypeError('`resource` must be a string, URL, or Request')\n    }\n\n    const url = new URL(resource.toString(), opts.base)\n\n    const {\n      searchParams,\n      transformSearchParams,\n      json\n    } = opts\n\n    if (searchParams) {\n      if (typeof transformSearchParams === 'function') {\n        // @ts-ignore\n        url.search = transformSearchParams(new URLSearchParams(opts.searchParams))\n      } else {\n        // @ts-ignore\n        url.search = new URLSearchParams(opts.searchParams)\n      }\n    }\n\n    if (json) {\n      opts.body = JSON.stringify(opts.json)\n      headers.set('content-type', 'application/json')\n    }\n\n    const abortController = new AbortController()\n    // @ts-ignore\n    const signal = anySignal([abortController.signal, opts.signal])\n\n    const response = await timeout(\n      fetch(\n        url.toString(),\n        {\n          ...opts,\n          signal,\n          timeout: undefined,\n          headers\n        }\n      ),\n      opts.timeout,\n      abortController\n    )\n\n    if (!response.ok && opts.throwHttpErrors) {\n      if (opts.handleError) {\n        await opts.handleError(response)\n      }\n      throw new HTTPError(response)\n    }\n\n    response.iterator = function () {\n      return fromStream(response.body)\n    }\n\n    response.ndjson = async function * () {\n      for await (const chunk of ndjson(response.iterator())) {\n        if (options.transform) {\n          yield options.transform(chunk)\n        } else {\n          yield chunk\n        }\n      }\n    }\n\n    return response\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  post (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'POST' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  get (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'GET' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  put (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'PUT' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  delete (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'DELETE' })\n  }\n\n  /**\n   * @param {string | Request} resource\n   * @param {HTTPOptions} options\n   */\n  options (resource, options = {}) {\n    return this.fetch(resource, { ...options, method: 'OPTIONS' })\n  }\n}\n\n/**\n * Parses NDJSON chunks from an iterator\n *\n * @param {AsyncIterable<Uint8Array>} source\n * @returns {AsyncIterable<any>}\n */\nconst ndjson = async function * (source) {\n  const decoder = new TextDecoder()\n  let buf = ''\n\n  for await (const chunk of source) {\n    buf += decoder.decode(chunk, { stream: true })\n    const lines = buf.split(/\\r?\\n/)\n\n    for (let i = 0; i < lines.length - 1; i++) {\n      const l = lines[i].trim()\n      if (l.length > 0) {\n        yield JSON.parse(l)\n      }\n    }\n    buf = lines[lines.length - 1]\n  }\n  buf += decoder.decode()\n  buf = buf.trim()\n  if (buf.length !== 0) {\n    yield JSON.parse(buf)\n  }\n}\n\n/**\n * Stream to AsyncIterable\n *\n * @template TChunk\n * @param {ReadableStream<TChunk> | NodeReadableStream | null} source\n * @returns {AsyncIterable<TChunk>}\n */\nconst fromStream = (source) => {\n  // Workaround for https://github.com/node-fetch/node-fetch/issues/766\n  if (isNodeReadableStream(source)) {\n    const iter = source[Symbol.asyncIterator]()\n    return {\n      [Symbol.asyncIterator] () {\n        return {\n          next: iter.next.bind(iter),\n          return (value) {\n            source.destroy()\n            if (typeof iter.return === 'function') {\n              return iter.return()\n            }\n            return Promise.resolve({ done: true, value })\n          }\n        }\n      }\n    }\n  }\n\n  if (isWebReadableStream(source)) {\n    const reader = source.getReader()\n    return (async function * () {\n      try {\n        while (true) {\n          // Read from the stream\n          const { done, value } = await reader.read()\n          // Exit if we're done\n          if (done) return\n          // Else yield the chunk\n          if (value) {\n            yield value\n          }\n        }\n      } finally {\n        reader.releaseLock()\n      }\n    })()\n  }\n\n  if (isAsyncIterable(source)) {\n    return source\n  }\n\n  throw new TypeError('Body can\\'t be converted to AsyncIterable')\n}\n\n/**\n * Check if it's an AsyncIterable\n *\n * @template {unknown} TChunk\n * @template {any} Other\n * @param {Other|AsyncIterable<TChunk>} value\n * @returns {value is AsyncIterable<TChunk>}\n */\nconst isAsyncIterable = (value) => {\n  return typeof value === 'object' &&\n  value !== null &&\n  typeof /** @type {any} */(value)[Symbol.asyncIterator] === 'function'\n}\n\n/**\n * Check for web readable stream\n *\n * @template {unknown} TChunk\n * @template {any} Other\n * @param {Other|ReadableStream<TChunk>} value\n * @returns {value is ReadableStream<TChunk>}\n */\nconst isWebReadableStream = (value) => {\n  return value && typeof /** @type {any} */(value).getReader === 'function'\n}\n\n/**\n * @param {any} value\n * @returns {value is NodeReadableStream}\n */\nconst isNodeReadableStream = (value) =>\n  Object.prototype.hasOwnProperty.call(value, 'readable') &&\n  Object.prototype.hasOwnProperty.call(value, 'writable')\n\nHTTP.HTTPError = HTTPError\nHTTP.TimeoutError = TimeoutError\nHTTP.streamToAsyncIterator = fromStream\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.post = (resource, options) => new HTTP(options).post(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.get = (resource, options) => new HTTP(options).get(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.put = (resource, options) => new HTTP(options).put(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.delete = (resource, options) => new HTTP(options).delete(resource, options)\n\n/**\n * @param {string | Request} resource\n * @param {HTTPOptions} [options]\n */\nHTTP.options = (resource, options) => new HTTP(options).options(resource, options)\n\nmodule.exports = HTTP\n"},"lineCount":360}},"error":null,"hash":"c02a9d9aa1fa8969623d682ab9aebc61","cacheData":{"env":{}}}