{"id":"node_modules/browser-readablestream-to-it/index.js","dependencies":[{"name":"/Users/gebruiker/Desktop/car-information-dapp/src/package.json","includedInParent":true,"mtime":1679887086003},{"name":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/browser-readablestream-to-it/package.json","includedInParent":true,"mtime":1679887084210}],"generated":{"js":"'use strict'\n\n/**\n * Turns a browser readable stream into an async iterable. Async iteration over\n * returned iterable will lock give stream, preventing any other consumer from\n * acquiring a reader. The lock will be released if iteration loop is broken. To\n * prevent stream cancelling optional `{ preventCancel: true }` could be passed\n * as a second argument.\n * @template T\n * @param {ReadableStream<T>} stream\n * @param {Object} [options]\n * @param {boolean} [options.preventCancel=boolean]\n * @returns {AsyncIterable<T>}\n */\nasync function * browserReadableStreamToIt (stream, options = {}) {\n  const reader = stream.getReader()\n\n  try {\n    while (true) {\n      const result = await reader.read()\n\n      if (result.done) {\n        return\n      }\n\n      yield result.value\n    }\n  } finally {\n    if (options.preventCancel !== true) {\n      reader.cancel()\n    }\n\n    reader.releaseLock()\n  }\n}\n\nmodule.exports = browserReadableStreamToIt\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/browser-readablestream-to-it/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/browser-readablestream-to-it/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/browser-readablestream-to-it/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/browser-readablestream-to-it/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/browser-readablestream-to-it/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/browser-readablestream-to-it/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/browser-readablestream-to-it/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/browser-readablestream-to-it/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/browser-readablestream-to-it/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/browser-readablestream-to-it/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/browser-readablestream-to-it/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/browser-readablestream-to-it/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/browser-readablestream-to-it/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/browser-readablestream-to-it/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/browser-readablestream-to-it/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/browser-readablestream-to-it/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/browser-readablestream-to-it/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/browser-readablestream-to-it/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/browser-readablestream-to-it/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/browser-readablestream-to-it/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/browser-readablestream-to-it/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/browser-readablestream-to-it/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/browser-readablestream-to-it/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/browser-readablestream-to-it/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/browser-readablestream-to-it/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/browser-readablestream-to-it/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/browser-readablestream-to-it/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/browser-readablestream-to-it/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/browser-readablestream-to-it/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/browser-readablestream-to-it/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/browser-readablestream-to-it/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/browser-readablestream-to-it/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/browser-readablestream-to-it/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/browser-readablestream-to-it/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/browser-readablestream-to-it/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/browser-readablestream-to-it/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/browser-readablestream-to-it/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/browser-readablestream-to-it/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}}],"sources":{"node_modules/browser-readablestream-to-it/index.js":"'use strict'\n\n/**\n * Turns a browser readable stream into an async iterable. Async iteration over\n * returned iterable will lock give stream, preventing any other consumer from\n * acquiring a reader. The lock will be released if iteration loop is broken. To\n * prevent stream cancelling optional `{ preventCancel: true }` could be passed\n * as a second argument.\n * @template T\n * @param {ReadableStream<T>} stream\n * @param {Object} [options]\n * @param {boolean} [options.preventCancel=boolean]\n * @returns {AsyncIterable<T>}\n */\nasync function * browserReadableStreamToIt (stream, options = {}) {\n  const reader = stream.getReader()\n\n  try {\n    while (true) {\n      const result = await reader.read()\n\n      if (result.done) {\n        return\n      }\n\n      yield result.value\n    }\n  } finally {\n    if (options.preventCancel !== true) {\n      reader.cancel()\n    }\n\n    reader.releaseLock()\n  }\n}\n\nmodule.exports = browserReadableStreamToIt\n"},"lineCount":38}},"error":null,"hash":"f2150dee34e329cb9c294cbca1defc8e","cacheData":{"env":{}}}