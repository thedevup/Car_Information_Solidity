{"id":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","dependencies":[{"name":"/Users/gebruiker/Desktop/car-information-dapp/src/package.json","includedInParent":true,"mtime":1680037715668},{"name":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/ipfs-utils/package.json","includedInParent":true,"mtime":1679887283668},{"name":"readable-stream","loc":{"line":2,"column":29,"index":42},"parent":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/ipfs-utils/src/streams/stream-from-filereader.js","resolved":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/ipfs-utils/node_modules/readable-stream/readable-browser.js"},{"name":"../supports","loc":{"line":3,"column":39,"index":100},"parent":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/ipfs-utils/src/streams/stream-from-filereader.js","resolved":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/ipfs-utils/src/supports.js"}],"generated":{"js":"'use strict'\nconst { Readable } = require('readable-stream')\nconst { supportsFileReader } = require('../supports')\n\nconst streamFromFileReader = (file, options) => {\n  if (!supportsFileReader) {\n    throw new Error('FileReader DOM API is not supported.')\n  }\n  class FileStream extends Readable {\n    constructor (file, options = {}) {\n      super(options)\n      this.file = file\n      this.offset = options.offset || 0\n      this.chunkSize = options.chunkSize || 1024 * 1024\n      this.fileReader = new self.FileReader(file)\n      this.fileReader.onloadend = (event) => {\n        const data = event.target.result\n        if (data.byteLength === 0) {\n          this.push(null)\n        }\n        this.push(new Uint8Array(data))\n      }\n      this.fileReader.onerror = (err) => this.destroy(err)\n    }\n\n    _read (size) {\n      const end = this.offset + this.chunkSize\n      const slice = file.slice(this.offset, end)\n      this.fileReader.readAsArrayBuffer(slice)\n      this.offset = end\n    }\n  }\n\n  return new FileStream(file, options)\n}\n\nmodule.exports = streamFromFileReader\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/ipfs-utils/src/streams/stream-from-filereader.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}}],"sources":{"node_modules/ipfs-utils/src/streams/stream-from-filereader.js":"'use strict'\nconst { Readable } = require('readable-stream')\nconst { supportsFileReader } = require('../supports')\n\nconst streamFromFileReader = (file, options) => {\n  if (!supportsFileReader) {\n    throw new Error('FileReader DOM API is not supported.')\n  }\n  class FileStream extends Readable {\n    constructor (file, options = {}) {\n      super(options)\n      this.file = file\n      this.offset = options.offset || 0\n      this.chunkSize = options.chunkSize || 1024 * 1024\n      this.fileReader = new self.FileReader(file)\n      this.fileReader.onloadend = (event) => {\n        const data = event.target.result\n        if (data.byteLength === 0) {\n          this.push(null)\n        }\n        this.push(new Uint8Array(data))\n      }\n      this.fileReader.onerror = (err) => this.destroy(err)\n    }\n\n    _read (size) {\n      const end = this.offset + this.chunkSize\n      const slice = file.slice(this.offset, end)\n      this.fileReader.readAsArrayBuffer(slice)\n      this.offset = end\n    }\n  }\n\n  return new FileStream(file, options)\n}\n\nmodule.exports = streamFromFileReader\n"},"lineCount":38}},"error":null,"hash":"95f118f5810dc847421c36f8ecc3644b","cacheData":{"env":{}}}