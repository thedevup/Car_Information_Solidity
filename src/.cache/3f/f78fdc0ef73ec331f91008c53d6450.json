{"id":"node_modules/multicodec/src/maps.js","dependencies":[{"name":"/Users/gebruiker/Desktop/car-information-dapp/src/package.json","includedInParent":true,"mtime":1679887086003},{"name":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/multicodec/package.json","includedInParent":true,"mtime":1679887084497},{"name":"./generated-table","loc":{"line":9,"column":30,"index":415},"parent":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/multicodec/src/maps.js","resolved":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/multicodec/src/generated-table.js"},{"name":"./util","loc":{"line":10,"column":29,"index":465},"parent":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/multicodec/src/maps.js","resolved":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/multicodec/src/util.js"}],"generated":{"js":"'use strict'\n\n/** @typedef {import('./generated-types').ConstantCodeMap} ConstantCodeMap */\n/** @typedef {import('./generated-types').NameUint8ArrayMap} NameUint8ArrayMap */\n/** @typedef {import('./generated-types').CodeNameMap} CodeNameMap */\n/** @typedef {import('./generated-types').CodecName} CodecName */\n/** @typedef {import('./generated-types').CodecConstant} CodecConstant */\n\nconst { baseTable } = require('./generated-table')\nconst varintEncode = require('./util').varintEncode\n\nconst nameToVarint = /** @type {NameUint8ArrayMap} */ ({})\nconst constantToCode = /** @type {ConstantCodeMap} */({})\nconst codeToName = /** @type {CodeNameMap} */({})\n\n// eslint-disable-next-line guard-for-in\nfor (const name in baseTable) {\n  const codecName = /** @type {CodecName} */(name)\n  const code = baseTable[codecName]\n  nameToVarint[codecName] = varintEncode(code)\n\n  const constant = /** @type {CodecConstant} */(codecName.toUpperCase().replace(/-/g, '_'))\n  constantToCode[constant] = code\n\n  if (!codeToName[code]) {\n    codeToName[code] = codecName\n  }\n}\n\nObject.freeze(nameToVarint)\nObject.freeze(constantToCode)\nObject.freeze(codeToName)\nconst nameToCode = Object.freeze(baseTable)\nmodule.exports = {\n  nameToVarint,\n  constantToCode,\n  nameToCode,\n  codeToName\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/multicodec/src/maps.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/multicodec/src/maps.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}}],"sources":{"node_modules/multicodec/src/maps.js":"'use strict'\n\n/** @typedef {import('./generated-types').ConstantCodeMap} ConstantCodeMap */\n/** @typedef {import('./generated-types').NameUint8ArrayMap} NameUint8ArrayMap */\n/** @typedef {import('./generated-types').CodeNameMap} CodeNameMap */\n/** @typedef {import('./generated-types').CodecName} CodecName */\n/** @typedef {import('./generated-types').CodecConstant} CodecConstant */\n\nconst { baseTable } = require('./generated-table')\nconst varintEncode = require('./util').varintEncode\n\nconst nameToVarint = /** @type {NameUint8ArrayMap} */ ({})\nconst constantToCode = /** @type {ConstantCodeMap} */({})\nconst codeToName = /** @type {CodeNameMap} */({})\n\n// eslint-disable-next-line guard-for-in\nfor (const name in baseTable) {\n  const codecName = /** @type {CodecName} */(name)\n  const code = baseTable[codecName]\n  nameToVarint[codecName] = varintEncode(code)\n\n  const constant = /** @type {CodecConstant} */(codecName.toUpperCase().replace(/-/g, '_'))\n  constantToCode[constant] = code\n\n  if (!codeToName[code]) {\n    codeToName[code] = codecName\n  }\n}\n\nObject.freeze(nameToVarint)\nObject.freeze(constantToCode)\nObject.freeze(codeToName)\nconst nameToCode = Object.freeze(baseTable)\nmodule.exports = {\n  nameToVarint,\n  constantToCode,\n  nameToCode,\n  codeToName\n}\n"},"lineCount":40}},"error":null,"hash":"e23f4be95e8613a4c3b38b7993922721","cacheData":{"env":{}}}