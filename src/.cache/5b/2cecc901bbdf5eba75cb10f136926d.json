{"id":"node_modules/multiformats/cjs/src/cid.js","dependencies":[{"name":"/Users/gebruiker/Desktop/car-information-dapp/src/package.json","includedInParent":true,"mtime":1679887086003},{"name":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/multiformats/package.json","includedInParent":true,"mtime":1679887084921},{"name":"./varint.js","loc":{"line":5,"column":21,"index":100},"parent":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/multiformats/cjs/src/cid.js","resolved":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/multiformats/cjs/src/varint.js"},{"name":"./hashes/digest.js","loc":{"line":6,"column":21,"index":137},"parent":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/multiformats/cjs/src/cid.js","resolved":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/multiformats/cjs/src/hashes/digest.js"},{"name":"./bases/base58.js","loc":{"line":7,"column":21,"index":181},"parent":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/multiformats/cjs/src/cid.js","resolved":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/multiformats/cjs/src/bases/base58.js"},{"name":"./bases/base32.js","loc":{"line":8,"column":21,"index":224},"parent":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/multiformats/cjs/src/cid.js","resolved":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/multiformats/cjs/src/bases/base32.js"},{"name":"./bytes.js","loc":{"line":9,"column":20,"index":266},"parent":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/multiformats/cjs/src/cid.js","resolved":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/multiformats/cjs/src/bytes.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar varint = require('./varint.js');\nvar digest = require('./hashes/digest.js');\nvar base58 = require('./bases/base58.js');\nvar base32 = require('./bases/base32.js');\nvar bytes = require('./bytes.js');\n\nclass CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest: digest$1} = this.multihash;\n        const multihash = digest.create(code, digest$1);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58.base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest$1 = digest.decode(multihash);\n      return CID.create(version, code, digest$1);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes$1) {\n    const specs = CID.inspectBytes(bytes$1);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = bytes.coerce(bytes$1.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest$1 = new digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest$1) : CID.createV1(specs.codec, digest$1);\n    return [\n      cid,\n      bytes$1.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58.base58btc;\n      return [\n        base58.base58btc.prefix,\n        decoder.decode(`${ base58.base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58.base58btc.prefix: {\n      const decoder = base || base58.base58btc;\n      return [\n        base58.base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.base32.prefix: {\n      const decoder = base || base32.base32;\n      return [\n        base32.base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58.base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;\n\nexports.CID = CID;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/multiformats/cjs/src/cid.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}}],"sources":{"node_modules/multiformats/cjs/src/cid.js":"'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar varint = require('./varint.js');\nvar digest = require('./hashes/digest.js');\nvar base58 = require('./bases/base58.js');\nvar base32 = require('./bases/base32.js');\nvar bytes = require('./bytes.js');\n\nclass CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest: digest$1} = this.multihash;\n        const multihash = digest.create(code, digest$1);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58.base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest$1 = digest.decode(multihash);\n      return CID.create(version, code, digest$1);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes$1) {\n    const specs = CID.inspectBytes(bytes$1);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = bytes.coerce(bytes$1.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest$1 = new digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest$1) : CID.createV1(specs.codec, digest$1);\n    return [\n      cid,\n      bytes$1.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58.base58btc;\n      return [\n        base58.base58btc.prefix,\n        decoder.decode(`${ base58.base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58.base58btc.prefix: {\n      const decoder = base || base58.base58btc;\n      return [\n        base58.base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.base32.prefix: {\n      const decoder = base || base32.base32;\n      return [\n        base32.base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58.base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;\n\nexports.CID = CID;\n"},"lineCount":316}},"error":null,"hash":"248c3ba12c89814cb819e37264b2f605","cacheData":{"env":{}}}