{"id":"node_modules/ipfs-utils/src/files/add-input-validation.js","dependencies":[{"name":"/Users/gebruiker/Desktop/car-information-dapp/src/package.json","includedInParent":true,"mtime":1680037715668},{"name":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/ipfs-utils/package.json","includedInParent":true,"mtime":1679887283668},{"name":"kind-of","loc":{"line":3,"column":23,"index":37},"parent":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/ipfs-utils/src/files/add-input-validation.js","resolved":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/kind-of/index.js"},{"name":"is-stream","loc":{"line":4,"column":25,"index":73},"parent":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/ipfs-utils/src/files/add-input-validation.js","resolved":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/is-stream/index.js"},{"name":"is-pull-stream","loc":{"line":5,"column":29,"index":115},"parent":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/ipfs-utils/src/files/add-input-validation.js","resolved":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/is-pull-stream/index.js"},{"name":"is-buffer","loc":{"line":6,"column":25,"index":158},"parent":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/ipfs-utils/src/files/add-input-validation.js","resolved":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/is-buffer/index.js"}],"generated":{"js":"'use strict'\n\nconst kindOf = require('kind-of')\nconst isStream = require('is-stream')\nconst { isSource } = require('is-pull-stream')\nconst isBuffer = require('is-buffer')\n\nconst validateAddInput = (input) => {\n  // Buffer|ReadableStream|PullStream|File\n  const isPrimitive = obj => isBuffer(obj) || isStream.readable(obj) || isSource(obj) || kindOf(obj) === 'file'\n\n  // An object like { content?, path? }, where content isBufferOrStream and path isString\n  const isContentObject = obj => {\n    if (typeof obj !== 'object') return false\n    // path is optional if content is present\n    if (obj.content) return isPrimitive(obj.content)\n    // path must be a non-empty string if no content\n    return Boolean(obj.path) && typeof obj.path === 'string'\n  }\n\n  // An input atom: a buffer, stream or content object\n  const isInput = obj => isPrimitive(obj) || isContentObject(obj)\n\n  if (isInput(input) || (Array.isArray(input) && input.every(isInput))) {\n    return true\n  } else {\n    throw new Error(`Input not supported. Expected Buffer|ReadableStream|PullStream|File|Array<Object> got ${kindOf(input)}. Check the documentation for more info https://github.com/ipfs/interface-js-ipfs-core/blob/master/SPEC/FILES.md#add`)\n  }\n}\n\nmodule.exports = validateAddInput\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/ipfs-utils/src/files/add-input-validation.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/ipfs-utils/src/files/add-input-validation.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/ipfs-utils/src/files/add-input-validation.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/ipfs-utils/src/files/add-input-validation.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/ipfs-utils/src/files/add-input-validation.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/ipfs-utils/src/files/add-input-validation.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/ipfs-utils/src/files/add-input-validation.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/ipfs-utils/src/files/add-input-validation.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/ipfs-utils/src/files/add-input-validation.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/ipfs-utils/src/files/add-input-validation.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/ipfs-utils/src/files/add-input-validation.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/ipfs-utils/src/files/add-input-validation.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/ipfs-utils/src/files/add-input-validation.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/ipfs-utils/src/files/add-input-validation.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/ipfs-utils/src/files/add-input-validation.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/ipfs-utils/src/files/add-input-validation.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/ipfs-utils/src/files/add-input-validation.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/ipfs-utils/src/files/add-input-validation.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/ipfs-utils/src/files/add-input-validation.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/ipfs-utils/src/files/add-input-validation.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/ipfs-utils/src/files/add-input-validation.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/ipfs-utils/src/files/add-input-validation.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/ipfs-utils/src/files/add-input-validation.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/ipfs-utils/src/files/add-input-validation.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/ipfs-utils/src/files/add-input-validation.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/ipfs-utils/src/files/add-input-validation.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/ipfs-utils/src/files/add-input-validation.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/ipfs-utils/src/files/add-input-validation.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/ipfs-utils/src/files/add-input-validation.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/ipfs-utils/src/files/add-input-validation.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/ipfs-utils/src/files/add-input-validation.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/ipfs-utils/src/files/add-input-validation.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}}],"sources":{"node_modules/ipfs-utils/src/files/add-input-validation.js":"'use strict'\n\nconst kindOf = require('kind-of')\nconst isStream = require('is-stream')\nconst { isSource } = require('is-pull-stream')\nconst isBuffer = require('is-buffer')\n\nconst validateAddInput = (input) => {\n  // Buffer|ReadableStream|PullStream|File\n  const isPrimitive = obj => isBuffer(obj) || isStream.readable(obj) || isSource(obj) || kindOf(obj) === 'file'\n\n  // An object like { content?, path? }, where content isBufferOrStream and path isString\n  const isContentObject = obj => {\n    if (typeof obj !== 'object') return false\n    // path is optional if content is present\n    if (obj.content) return isPrimitive(obj.content)\n    // path must be a non-empty string if no content\n    return Boolean(obj.path) && typeof obj.path === 'string'\n  }\n\n  // An input atom: a buffer, stream or content object\n  const isInput = obj => isPrimitive(obj) || isContentObject(obj)\n\n  if (isInput(input) || (Array.isArray(input) && input.every(isInput))) {\n    return true\n  } else {\n    throw new Error(`Input not supported. Expected Buffer|ReadableStream|PullStream|File|Array<Object> got ${kindOf(input)}. Check the documentation for more info https://github.com/ipfs/interface-js-ipfs-core/blob/master/SPEC/FILES.md#add`)\n  }\n}\n\nmodule.exports = validateAddInput\n"},"lineCount":32}},"error":null,"hash":"df494d906808eb26f8040739db814bd7","cacheData":{"env":{}}}