{"id":"node_modules/it-tar/extract-headers.js","dependencies":[{"name":"/Users/gebruiker/Desktop/car-information-dapp/src/package.json","includedInParent":true,"mtime":1679887086003},{"name":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/it-tar/package.json","includedInParent":true,"mtime":1679887085123},{"name":"buffer","loc":{"line":1,"column":27,"index":27},"parent":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/it-tar/extract-headers.js","resolved":"/usr/local/lib/node_modules/parcel-bundler/node_modules/buffer/index.js"},{"name":"bl/BufferList","loc":{"line":2,"column":27,"index":64},"parent":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/it-tar/extract-headers.js","resolved":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/bl/BufferList.js"}],"generated":{"js":"\nconst { Buffer } = require('buffer')\nconst BufferList = require('bl/BufferList')\n\nconst ZERO_OFFSET = '0'.charCodeAt(0)\nconst USTAR_MAGIC = Buffer.from('ustar\\x00', 'binary')\nconst GNU_MAGIC = Buffer.from('ustar\\x20', 'binary')\nconst GNU_VER = Buffer.from('\\x20\\x00', 'binary')\nconst MAGIC_OFFSET = 257\nconst VERSION_OFFSET = 263\n\nconst clamp = function (index, len, defaultValue) {\n  if (typeof index !== 'number') return defaultValue\n  index = ~~index // Coerce to integer.\n  if (index >= len) return len\n  if (index >= 0) return index\n  index += len\n  if (index >= 0) return index\n  return 0\n}\n\nconst toType = function (flag) {\n  switch (flag) {\n    case 0:\n      return 'file'\n    case 1:\n      return 'link'\n    case 2:\n      return 'symlink'\n    case 3:\n      return 'character-device'\n    case 4:\n      return 'block-device'\n    case 5:\n      return 'directory'\n    case 6:\n      return 'fifo'\n    case 7:\n      return 'contiguous-file'\n    case 72:\n      return 'pax-header'\n    case 55:\n      return 'pax-global-header'\n    case 27:\n      return 'gnu-long-link-path'\n    case 28:\n    case 30:\n      return 'gnu-long-path'\n  }\n\n  return null\n}\n\nconst indexOf = function (block, num, offset, end) {\n  for (; offset < end; offset++) {\n    if (block.get(offset) === num) return offset\n  }\n  return end\n}\n\nconst cksum = function (block) {\n  let sum = 8 * 32\n  for (let i = 0; i < 148; i++) sum += block.get(i)\n  for (let j = 156; j < 512; j++) sum += block.get(j)\n  return sum\n}\n\n/* Copied from the node-tar repo and modified to meet\n * tar-stream coding standard.\n *\n * Source: https://github.com/npm/node-tar/blob/51b6627a1f357d2eb433e7378e5f05e83b7aa6cd/lib/header.js#L349\n */\nfunction parse256 (buf) {\n  // first byte MUST be either 80 or FF\n  // 80 for positive, FF for 2's comp\n  let positive\n  if (buf.get(0) === 0x80) positive = true\n  else if (buf.get(0) === 0xFF) positive = false\n  else return null\n\n  // build up a base-256 tuple from the least sig to the highest\n  let zero = false\n  const tuple = []\n  for (let i = buf.length - 1; i > 0; i--) {\n    const byte = buf.get(i)\n    if (positive) tuple.push(byte)\n    else if (zero && byte === 0) tuple.push(0)\n    else if (zero) {\n      zero = false\n      tuple.push(0x100 - byte)\n    } else tuple.push(0xFF - byte)\n  }\n\n  let sum = 0\n  const l = tuple.length\n  for (let i = 0; i < l; i++) {\n    sum += tuple[i] * Math.pow(256, i)\n  }\n\n  return positive ? sum : -1 * sum\n}\n\nconst decodeOct = function (val, offset, length) {\n  val = val.shallowSlice(offset, offset + length)\n  offset = 0\n\n  // If prefixed with 0x80 then parse as a base-256 integer\n  if (val.get(offset) & 0x80) {\n    return parse256(val)\n  } else {\n    // Older versions of tar can prefix with spaces\n    while (offset < val.length && val.get(offset) === 32) offset++\n    const end = clamp(indexOf(val, 32, offset, val.length), val.length, val.length)\n    while (offset < end && val.get(offset) === 0) offset++\n    if (end === offset) return 0\n    return parseInt(val.shallowSlice(offset, end).toString(), 8)\n  }\n}\n\nconst decodeStr = function (val, offset, length, encoding) {\n  return val.shallowSlice(offset, indexOf(val, 0, offset, offset + length)).toString(encoding)\n}\n\nexports.decodeLongPath = function (buf, encoding) {\n  buf = BufferList.isBufferList(buf) ? buf : new BufferList(buf)\n  return decodeStr(buf, 0, buf.length, encoding)\n}\n\nexports.decodePax = function (buf) {\n  buf = BufferList.isBufferList(buf) ? buf : new BufferList(buf)\n  const result = {}\n\n  while (buf.length) {\n    let i = 0\n    while (i < buf.length && buf.get(i) !== 32) i++\n    const len = parseInt(buf.shallowSlice(0, i).toString(), 10)\n    if (!len) return result\n\n    const b = buf.shallowSlice(i + 1, len - 1).toString()\n    const keyIndex = b.indexOf('=')\n    if (keyIndex === -1) return result\n    result[b.slice(0, keyIndex)] = b.slice(keyIndex + 1)\n\n    buf = buf.shallowSlice(len)\n  }\n\n  return result\n}\n\nexports.decode = function (buf, filenameEncoding) {\n  buf = BufferList.isBufferList(buf) ? buf : new BufferList(buf)\n  let typeflag = buf.get(156) === 0 ? 0 : buf.get(156) - ZERO_OFFSET\n\n  let name = decodeStr(buf, 0, 100, filenameEncoding)\n  const mode = decodeOct(buf, 100, 8)\n  const uid = decodeOct(buf, 108, 8)\n  const gid = decodeOct(buf, 116, 8)\n  const size = decodeOct(buf, 124, 12)\n  const mtime = decodeOct(buf, 136, 12)\n  const type = toType(typeflag)\n  const linkname = buf.get(157) === 0 ? null : decodeStr(buf, 157, 100, filenameEncoding)\n  const uname = decodeStr(buf, 265, 32)\n  const gname = decodeStr(buf, 297, 32)\n  const devmajor = decodeOct(buf, 329, 8)\n  const devminor = decodeOct(buf, 337, 8)\n\n  const c = cksum(buf)\n\n  // checksum is still initial value if header was null.\n  if (c === 8 * 32) return null\n\n  // valid checksum\n  if (c !== decodeOct(buf, 148, 8)) throw new Error('Invalid tar header. Maybe the tar is corrupted or it needs to be gunzipped?')\n\n  if (USTAR_MAGIC.compare(buf.slice(MAGIC_OFFSET, MAGIC_OFFSET + 6)) === 0) {\n    // ustar (posix) format.\n    // prepend prefix, if present.\n    if (buf.get(345)) name = decodeStr(buf, 345, 155, filenameEncoding) + '/' + name\n  } else if (GNU_MAGIC.compare(buf.slice(MAGIC_OFFSET, MAGIC_OFFSET + 6)) === 0 &&\n             GNU_VER.compare(buf.slice(VERSION_OFFSET, VERSION_OFFSET + 2)) === 0) {\n    // 'gnu'/'oldgnu' format. Similar to ustar, but has support for incremental and\n    // multi-volume tarballs.\n  } else {\n    throw new Error('Invalid tar header: unknown format.')\n  }\n\n  // to support old tar versions that use trailing / to indicate dirs\n  if (typeflag === 0 && name && name[name.length - 1] === '/') typeflag = 5\n\n  return {\n    name: name,\n    mode: mode,\n    uid: uid,\n    gid: gid,\n    size: size,\n    mtime: new Date(1000 * mtime),\n    type: type,\n    linkname: linkname,\n    uname: uname,\n    gname: gname,\n    devmajor: devmajor,\n    devminor: devminor\n  }\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/it-tar/extract-headers.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/it-tar/extract-headers.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}}],"sources":{"node_modules/it-tar/extract-headers.js":"const { Buffer } = require('buffer')\nconst BufferList = require('bl/BufferList')\n\nconst ZERO_OFFSET = '0'.charCodeAt(0)\nconst USTAR_MAGIC = Buffer.from('ustar\\x00', 'binary')\nconst GNU_MAGIC = Buffer.from('ustar\\x20', 'binary')\nconst GNU_VER = Buffer.from('\\x20\\x00', 'binary')\nconst MAGIC_OFFSET = 257\nconst VERSION_OFFSET = 263\n\nconst clamp = function (index, len, defaultValue) {\n  if (typeof index !== 'number') return defaultValue\n  index = ~~index // Coerce to integer.\n  if (index >= len) return len\n  if (index >= 0) return index\n  index += len\n  if (index >= 0) return index\n  return 0\n}\n\nconst toType = function (flag) {\n  switch (flag) {\n    case 0:\n      return 'file'\n    case 1:\n      return 'link'\n    case 2:\n      return 'symlink'\n    case 3:\n      return 'character-device'\n    case 4:\n      return 'block-device'\n    case 5:\n      return 'directory'\n    case 6:\n      return 'fifo'\n    case 7:\n      return 'contiguous-file'\n    case 72:\n      return 'pax-header'\n    case 55:\n      return 'pax-global-header'\n    case 27:\n      return 'gnu-long-link-path'\n    case 28:\n    case 30:\n      return 'gnu-long-path'\n  }\n\n  return null\n}\n\nconst indexOf = function (block, num, offset, end) {\n  for (; offset < end; offset++) {\n    if (block.get(offset) === num) return offset\n  }\n  return end\n}\n\nconst cksum = function (block) {\n  let sum = 8 * 32\n  for (let i = 0; i < 148; i++) sum += block.get(i)\n  for (let j = 156; j < 512; j++) sum += block.get(j)\n  return sum\n}\n\n/* Copied from the node-tar repo and modified to meet\n * tar-stream coding standard.\n *\n * Source: https://github.com/npm/node-tar/blob/51b6627a1f357d2eb433e7378e5f05e83b7aa6cd/lib/header.js#L349\n */\nfunction parse256 (buf) {\n  // first byte MUST be either 80 or FF\n  // 80 for positive, FF for 2's comp\n  let positive\n  if (buf.get(0) === 0x80) positive = true\n  else if (buf.get(0) === 0xFF) positive = false\n  else return null\n\n  // build up a base-256 tuple from the least sig to the highest\n  let zero = false\n  const tuple = []\n  for (let i = buf.length - 1; i > 0; i--) {\n    const byte = buf.get(i)\n    if (positive) tuple.push(byte)\n    else if (zero && byte === 0) tuple.push(0)\n    else if (zero) {\n      zero = false\n      tuple.push(0x100 - byte)\n    } else tuple.push(0xFF - byte)\n  }\n\n  let sum = 0\n  const l = tuple.length\n  for (let i = 0; i < l; i++) {\n    sum += tuple[i] * Math.pow(256, i)\n  }\n\n  return positive ? sum : -1 * sum\n}\n\nconst decodeOct = function (val, offset, length) {\n  val = val.shallowSlice(offset, offset + length)\n  offset = 0\n\n  // If prefixed with 0x80 then parse as a base-256 integer\n  if (val.get(offset) & 0x80) {\n    return parse256(val)\n  } else {\n    // Older versions of tar can prefix with spaces\n    while (offset < val.length && val.get(offset) === 32) offset++\n    const end = clamp(indexOf(val, 32, offset, val.length), val.length, val.length)\n    while (offset < end && val.get(offset) === 0) offset++\n    if (end === offset) return 0\n    return parseInt(val.shallowSlice(offset, end).toString(), 8)\n  }\n}\n\nconst decodeStr = function (val, offset, length, encoding) {\n  return val.shallowSlice(offset, indexOf(val, 0, offset, offset + length)).toString(encoding)\n}\n\nexports.decodeLongPath = function (buf, encoding) {\n  buf = BufferList.isBufferList(buf) ? buf : new BufferList(buf)\n  return decodeStr(buf, 0, buf.length, encoding)\n}\n\nexports.decodePax = function (buf) {\n  buf = BufferList.isBufferList(buf) ? buf : new BufferList(buf)\n  const result = {}\n\n  while (buf.length) {\n    let i = 0\n    while (i < buf.length && buf.get(i) !== 32) i++\n    const len = parseInt(buf.shallowSlice(0, i).toString(), 10)\n    if (!len) return result\n\n    const b = buf.shallowSlice(i + 1, len - 1).toString()\n    const keyIndex = b.indexOf('=')\n    if (keyIndex === -1) return result\n    result[b.slice(0, keyIndex)] = b.slice(keyIndex + 1)\n\n    buf = buf.shallowSlice(len)\n  }\n\n  return result\n}\n\nexports.decode = function (buf, filenameEncoding) {\n  buf = BufferList.isBufferList(buf) ? buf : new BufferList(buf)\n  let typeflag = buf.get(156) === 0 ? 0 : buf.get(156) - ZERO_OFFSET\n\n  let name = decodeStr(buf, 0, 100, filenameEncoding)\n  const mode = decodeOct(buf, 100, 8)\n  const uid = decodeOct(buf, 108, 8)\n  const gid = decodeOct(buf, 116, 8)\n  const size = decodeOct(buf, 124, 12)\n  const mtime = decodeOct(buf, 136, 12)\n  const type = toType(typeflag)\n  const linkname = buf.get(157) === 0 ? null : decodeStr(buf, 157, 100, filenameEncoding)\n  const uname = decodeStr(buf, 265, 32)\n  const gname = decodeStr(buf, 297, 32)\n  const devmajor = decodeOct(buf, 329, 8)\n  const devminor = decodeOct(buf, 337, 8)\n\n  const c = cksum(buf)\n\n  // checksum is still initial value if header was null.\n  if (c === 8 * 32) return null\n\n  // valid checksum\n  if (c !== decodeOct(buf, 148, 8)) throw new Error('Invalid tar header. Maybe the tar is corrupted or it needs to be gunzipped?')\n\n  if (USTAR_MAGIC.compare(buf.slice(MAGIC_OFFSET, MAGIC_OFFSET + 6)) === 0) {\n    // ustar (posix) format.\n    // prepend prefix, if present.\n    if (buf.get(345)) name = decodeStr(buf, 345, 155, filenameEncoding) + '/' + name\n  } else if (GNU_MAGIC.compare(buf.slice(MAGIC_OFFSET, MAGIC_OFFSET + 6)) === 0 &&\n             GNU_VER.compare(buf.slice(VERSION_OFFSET, VERSION_OFFSET + 2)) === 0) {\n    // 'gnu'/'oldgnu' format. Similar to ustar, but has support for incremental and\n    // multi-volume tarballs.\n  } else {\n    throw new Error('Invalid tar header: unknown format.')\n  }\n\n  // to support old tar versions that use trailing / to indicate dirs\n  if (typeflag === 0 && name && name[name.length - 1] === '/') typeflag = 5\n\n  return {\n    name: name,\n    mode: mode,\n    uid: uid,\n    gid: gid,\n    size: size,\n    mtime: new Date(1000 * mtime),\n    type: type,\n    linkname: linkname,\n    uname: uname,\n    gname: gname,\n    devmajor: devmajor,\n    devminor: devminor\n  }\n}\n"},"lineCount":205}},"error":null,"hash":"90114236dad10ef965dc26338c2438f3","cacheData":{"env":{}}}