{"id":"node_modules/it-tar/lte-reader.js","dependencies":[{"name":"/Users/gebruiker/Desktop/car-information-dapp/src/package.json","includedInParent":true,"mtime":1679887086003},{"name":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/it-tar/package.json","includedInParent":true,"mtime":1679887085123},{"name":"bl/BufferList","loc":{"line":1,"column":27,"index":27},"parent":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/it-tar/lte-reader.js","resolved":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/bl/BufferList.js"},{"name":"it-reader","loc":{"line":2,"column":23,"index":67},"parent":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/it-tar/lte-reader.js","resolved":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/it-reader/index.js"}],"generated":{"js":"const BufferList = require('bl/BufferList')\nconst Reader = require('it-reader')\n\nmodule.exports = function LteReader (source) {\n  const reader = Reader(source)\n  let overflow\n  const lteReader = {\n    [Symbol.asyncIterator]: () => lteReader,\n    async next (bytes) {\n      if (overflow) {\n        let value\n        if (bytes == null || overflow.length === bytes) {\n          value = overflow\n          overflow = null\n        } else if (overflow.length > bytes) {\n          value = overflow.shallowSlice(0, bytes)\n          overflow = overflow.shallowSlice(bytes)\n        } else if (overflow.length < bytes) {\n          const { value: nextValue, done } = await reader.next(bytes - overflow.length)\n          if (done) {\n            throw Object.assign(\n              new Error(`stream ended before ${bytes - overflow.length} bytes became available`),\n              { code: 'ERR_UNDER_READ' }\n            )\n          }\n          value = new BufferList([overflow, nextValue])\n          overflow = null\n        }\n        return { value }\n      }\n      return reader.next(bytes)\n    },\n    async nextLte (bytes) {\n      let { done, value } = await lteReader.next()\n      if (done) return { done }\n      if (value.length <= bytes) return { value }\n      value = BufferList.isBufferList(value) ? value : new BufferList(value)\n      if (overflow) {\n        overflow.append(value.shallowSlice(bytes))\n      } else {\n        overflow = value.shallowSlice(bytes)\n      }\n      return { value: value.shallowSlice(0, bytes) }\n    },\n    return () {\n      return reader.return()\n    }\n  }\n  return lteReader\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/it-tar/lte-reader.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/it-tar/lte-reader.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}}],"sources":{"node_modules/it-tar/lte-reader.js":"const BufferList = require('bl/BufferList')\nconst Reader = require('it-reader')\n\nmodule.exports = function LteReader (source) {\n  const reader = Reader(source)\n  let overflow\n  const lteReader = {\n    [Symbol.asyncIterator]: () => lteReader,\n    async next (bytes) {\n      if (overflow) {\n        let value\n        if (bytes == null || overflow.length === bytes) {\n          value = overflow\n          overflow = null\n        } else if (overflow.length > bytes) {\n          value = overflow.shallowSlice(0, bytes)\n          overflow = overflow.shallowSlice(bytes)\n        } else if (overflow.length < bytes) {\n          const { value: nextValue, done } = await reader.next(bytes - overflow.length)\n          if (done) {\n            throw Object.assign(\n              new Error(`stream ended before ${bytes - overflow.length} bytes became available`),\n              { code: 'ERR_UNDER_READ' }\n            )\n          }\n          value = new BufferList([overflow, nextValue])\n          overflow = null\n        }\n        return { value }\n      }\n      return reader.next(bytes)\n    },\n    async nextLte (bytes) {\n      let { done, value } = await lteReader.next()\n      if (done) return { done }\n      if (value.length <= bytes) return { value }\n      value = BufferList.isBufferList(value) ? value : new BufferList(value)\n      if (overflow) {\n        overflow.append(value.shallowSlice(bytes))\n      } else {\n        overflow = value.shallowSlice(bytes)\n      }\n      return { value: value.shallowSlice(0, bytes) }\n    },\n    return () {\n      return reader.return()\n    }\n  }\n  return lteReader\n}\n"},"lineCount":51}},"error":null,"hash":"6b88c86e7e49eea0be7cf2c90826ee86","cacheData":{"env":{}}}