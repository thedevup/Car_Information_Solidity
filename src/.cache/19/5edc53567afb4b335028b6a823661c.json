{"id":"node_modules/ipfs-core-utils/src/to-url-string.js","dependencies":[{"name":"/Users/gebruiker/Desktop/car-information-dapp/src/package.json","includedInParent":true,"mtime":1679887086003},{"name":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/ipfs-core-utils/package.json","includedInParent":true,"mtime":1679887085154},{"name":"multiaddr","loc":{"line":3,"column":30,"index":44},"parent":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/ipfs-core-utils/src/to-url-string.js","resolved":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/multiaddr/src/index.js"},{"name":"multiaddr-to-uri","loc":{"line":5,"column":31,"index":111},"parent":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/ipfs-core-utils/src/to-url-string.js","resolved":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/multiaddr-to-uri/index.js"}],"generated":{"js":"'use strict'\n\nconst { Multiaddr } = require('multiaddr')\n// @ts-ignore no types\nconst multiAddrToUri = require('multiaddr-to-uri')\n\n/**\n * @param {string|Multiaddr|URL} url - A string, multiaddr or URL to convert to a url string\n * @returns {string}\n */\nmodule.exports = (url) => {\n  try {\n    // @ts-expect-error\n    url = multiAddrToUri(new Multiaddr(url))\n  } catch (err) { }\n\n  url = url.toString()\n\n  return url\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/ipfs-core-utils/src/to-url-string.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/ipfs-core-utils/src/to-url-string.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/ipfs-core-utils/src/to-url-string.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/ipfs-core-utils/src/to-url-string.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/ipfs-core-utils/src/to-url-string.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/ipfs-core-utils/src/to-url-string.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/ipfs-core-utils/src/to-url-string.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/ipfs-core-utils/src/to-url-string.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/ipfs-core-utils/src/to-url-string.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/ipfs-core-utils/src/to-url-string.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/ipfs-core-utils/src/to-url-string.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/ipfs-core-utils/src/to-url-string.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/ipfs-core-utils/src/to-url-string.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/ipfs-core-utils/src/to-url-string.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/ipfs-core-utils/src/to-url-string.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/ipfs-core-utils/src/to-url-string.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/ipfs-core-utils/src/to-url-string.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/ipfs-core-utils/src/to-url-string.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/ipfs-core-utils/src/to-url-string.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/ipfs-core-utils/src/to-url-string.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/ipfs-core-utils/src/to-url-string.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}}],"sources":{"node_modules/ipfs-core-utils/src/to-url-string.js":"'use strict'\n\nconst { Multiaddr } = require('multiaddr')\n// @ts-ignore no types\nconst multiAddrToUri = require('multiaddr-to-uri')\n\n/**\n * @param {string|Multiaddr|URL} url - A string, multiaddr or URL to convert to a url string\n * @returns {string}\n */\nmodule.exports = (url) => {\n  try {\n    // @ts-expect-error\n    url = multiAddrToUri(new Multiaddr(url))\n  } catch (err) { }\n\n  url = url.toString()\n\n  return url\n}\n"},"lineCount":21}},"error":null,"hash":"80ddacd570bc3b28428b7157a25b0d78","cacheData":{"env":{}}}