{"id":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","dependencies":[{"name":"/Users/gebruiker/Desktop/car-information-dapp/src/package.json","includedInParent":true,"mtime":1679887086003},{"name":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/ipfs-core-utils/package.json","includedInParent":true,"mtime":1679887085154},{"name":"err-code","loc":{"line":3,"column":24,"index":38},"parent":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/ipfs-core-utils/src/pins/normalise-input.js","resolved":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/err-code/index.js"},{"name":"cids","loc":{"line":4,"column":20,"index":70},"parent":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/ipfs-core-utils/src/pins/normalise-input.js","resolved":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/cids/src/index.js"}],"generated":{"js":"'use strict'\n\nconst errCode = require('err-code')\nconst CID = require('cids')\n\n/**\n * @typedef {Object} Pinnable\n * @property {string | InstanceType<typeof window.String> | CID} [path]\n * @property {CID} [cid]\n * @property {boolean} [recursive]\n * @property {any} [metadata]\n *\n * @typedef {CID|string|InstanceType<typeof window.String>|Pinnable} ToPin\n * @typedef {ToPin|Iterable<ToPin>|AsyncIterable<ToPin>} Source\n *\n * @typedef {Object} Pin\n * @property {string|CID} path\n * @property {boolean} recursive\n * @property {any} [metadata]\n */\n\n/**\n * Transform one of:\n *\n * ```ts\n * CID\n * String\n * { cid: CID recursive, metadata }\n * { path: String recursive, metadata }\n * Iterable<CID>\n * Iterable<String>\n * Iterable<{ cid: CID recursive, metadata }>\n * Iterable<{ path: String recursive, metadata }>\n * AsyncIterable<CID>\n * AsyncIterable<String>\n * AsyncIterable<{ cid: CID recursive, metadata }>\n * AsyncIterable<{ path: String recursive, metadata }>\n * ```\n * Into:\n *\n * ```ts\n * AsyncIterable<{ path: CID|String, recursive:boolean, metadata }>\n * ```\n *\n * @param {Source} input\n * @returns {AsyncIterable<Pin>}\n */\n// eslint-disable-next-line complexity\nmodule.exports = async function * normaliseInput (input) {\n  // must give us something\n  if (input === null || input === undefined) {\n    throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // CID|String\n  if (CID.isCID(input)) {\n    yield toPin({ cid: input })\n    return\n  }\n\n  if (input instanceof String || typeof input === 'string') {\n    yield toPin({ path: input })\n    return\n  }\n\n  // { cid: CID recursive, metadata }\n  // @ts-ignore - it still could be iterable or async iterable\n  if (input.cid != null || input.path != null) {\n    // @ts-ignore\n    return yield toPin(input)\n  }\n\n  // Iterable<?>\n  if (Symbol.iterator in input) {\n    // @ts-ignore\n    const iterator = input[Symbol.iterator]()\n    const first = iterator.next()\n    if (first.done) return iterator\n\n    // Iterable<CID|String>\n    if (CID.isCID(first.value) || first.value instanceof String || typeof first.value === 'string') {\n      yield toPin({ cid: first.value })\n      for (const cid of iterator) {\n        yield toPin({ cid })\n      }\n      return\n    }\n\n    // Iterable<{ cid: CID recursive, metadata }>\n    if (first.value.cid != null || first.value.path != null) {\n      yield toPin(first.value)\n      for (const obj of iterator) {\n        yield toPin(obj)\n      }\n      return\n    }\n\n    throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // AsyncIterable<?>\n  if (Symbol.asyncIterator in input) {\n    // @ts-ignore\n    const iterator = input[Symbol.asyncIterator]()\n    const first = await iterator.next()\n    if (first.done) return iterator\n\n    // AsyncIterable<CID|String>\n    if (CID.isCID(first.value) || first.value instanceof String || typeof first.value === 'string') {\n      yield toPin({ cid: first.value })\n      for await (const cid of iterator) {\n        yield toPin({ cid })\n      }\n      return\n    }\n\n    // AsyncIterable<{ cid: CID|String recursive, metadata }>\n    if (first.value.cid != null || first.value.path != null) {\n      yield toPin(first.value)\n      for await (const obj of iterator) {\n        yield toPin(obj)\n      }\n      return\n    }\n\n    throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {Pinnable} input\n */\nfunction toPin (input) {\n  const path = input.cid || `${input.path}`\n\n  if (!path) {\n    throw errCode(new Error('Unexpected input: Please path either a CID or an IPFS path'), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  /** @type {Pin} */\n  const pin = {\n    path,\n    recursive: input.recursive !== false\n  }\n\n  if (input.metadata != null) {\n    pin.metadata = input.metadata\n  }\n\n  return pin\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/ipfs-core-utils/src/pins/normalise-input.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}}],"sources":{"node_modules/ipfs-core-utils/src/pins/normalise-input.js":"'use strict'\n\nconst errCode = require('err-code')\nconst CID = require('cids')\n\n/**\n * @typedef {Object} Pinnable\n * @property {string | InstanceType<typeof window.String> | CID} [path]\n * @property {CID} [cid]\n * @property {boolean} [recursive]\n * @property {any} [metadata]\n *\n * @typedef {CID|string|InstanceType<typeof window.String>|Pinnable} ToPin\n * @typedef {ToPin|Iterable<ToPin>|AsyncIterable<ToPin>} Source\n *\n * @typedef {Object} Pin\n * @property {string|CID} path\n * @property {boolean} recursive\n * @property {any} [metadata]\n */\n\n/**\n * Transform one of:\n *\n * ```ts\n * CID\n * String\n * { cid: CID recursive, metadata }\n * { path: String recursive, metadata }\n * Iterable<CID>\n * Iterable<String>\n * Iterable<{ cid: CID recursive, metadata }>\n * Iterable<{ path: String recursive, metadata }>\n * AsyncIterable<CID>\n * AsyncIterable<String>\n * AsyncIterable<{ cid: CID recursive, metadata }>\n * AsyncIterable<{ path: String recursive, metadata }>\n * ```\n * Into:\n *\n * ```ts\n * AsyncIterable<{ path: CID|String, recursive:boolean, metadata }>\n * ```\n *\n * @param {Source} input\n * @returns {AsyncIterable<Pin>}\n */\n// eslint-disable-next-line complexity\nmodule.exports = async function * normaliseInput (input) {\n  // must give us something\n  if (input === null || input === undefined) {\n    throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // CID|String\n  if (CID.isCID(input)) {\n    yield toPin({ cid: input })\n    return\n  }\n\n  if (input instanceof String || typeof input === 'string') {\n    yield toPin({ path: input })\n    return\n  }\n\n  // { cid: CID recursive, metadata }\n  // @ts-ignore - it still could be iterable or async iterable\n  if (input.cid != null || input.path != null) {\n    // @ts-ignore\n    return yield toPin(input)\n  }\n\n  // Iterable<?>\n  if (Symbol.iterator in input) {\n    // @ts-ignore\n    const iterator = input[Symbol.iterator]()\n    const first = iterator.next()\n    if (first.done) return iterator\n\n    // Iterable<CID|String>\n    if (CID.isCID(first.value) || first.value instanceof String || typeof first.value === 'string') {\n      yield toPin({ cid: first.value })\n      for (const cid of iterator) {\n        yield toPin({ cid })\n      }\n      return\n    }\n\n    // Iterable<{ cid: CID recursive, metadata }>\n    if (first.value.cid != null || first.value.path != null) {\n      yield toPin(first.value)\n      for (const obj of iterator) {\n        yield toPin(obj)\n      }\n      return\n    }\n\n    throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  // AsyncIterable<?>\n  if (Symbol.asyncIterator in input) {\n    // @ts-ignore\n    const iterator = input[Symbol.asyncIterator]()\n    const first = await iterator.next()\n    if (first.done) return iterator\n\n    // AsyncIterable<CID|String>\n    if (CID.isCID(first.value) || first.value instanceof String || typeof first.value === 'string') {\n      yield toPin({ cid: first.value })\n      for await (const cid of iterator) {\n        yield toPin({ cid })\n      }\n      return\n    }\n\n    // AsyncIterable<{ cid: CID|String recursive, metadata }>\n    if (first.value.cid != null || first.value.path != null) {\n      yield toPin(first.value)\n      for await (const obj of iterator) {\n        yield toPin(obj)\n      }\n      return\n    }\n\n    throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  throw errCode(new Error('Unexpected input: ' + typeof input), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {Pinnable} input\n */\nfunction toPin (input) {\n  const path = input.cid || `${input.path}`\n\n  if (!path) {\n    throw errCode(new Error('Unexpected input: Please path either a CID or an IPFS path'), 'ERR_UNEXPECTED_INPUT')\n  }\n\n  /** @type {Pin} */\n  const pin = {\n    path,\n    recursive: input.recursive !== false\n  }\n\n  if (input.metadata != null) {\n    pin.metadata = input.metadata\n  }\n\n  return pin\n}\n"},"lineCount":154}},"error":null,"hash":"4515f02ae97bfe56f06bbf43b367f267","cacheData":{"env":{}}}