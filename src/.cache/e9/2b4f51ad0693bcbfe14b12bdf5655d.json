{"id":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","dependencies":[{"name":"/Users/gebruiker/Desktop/car-information-dapp/src/package.json","includedInParent":true,"mtime":1679887086003},{"name":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/ipfs-core-utils/package.json","includedInParent":true,"mtime":1679887085154},{"name":"err-code","loc":{"line":3,"column":24,"index":38},"parent":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","resolved":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/err-code/index.js"},{"name":"it-peekable","loc":{"line":4,"column":27,"index":77},"parent":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","resolved":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/it-peekable/index.js"},{"name":"browser-readablestream-to-it","loc":{"line":5,"column":34,"index":126},"parent":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","resolved":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/browser-readablestream-to-it/index.js"},{"name":"it-all","loc":{"line":6,"column":20,"index":178},"parent":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","resolved":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/it-all/index.js"},{"name":"./utils","loc":{"line":12,"column":12,"index":249},"parent":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","resolved":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/ipfs-core-utils/src/files/normalise-input/utils.js"}],"generated":{"js":"'use strict'\n\nconst errCode = require('err-code')\nconst itPeekable = require('it-peekable')\nconst browserStreamToIt = require('browser-readablestream-to-it')\nconst all = require('it-all')\n\nconst {\n  isBytes,\n  isBlob,\n  isReadableStream\n} = require('./utils')\n\n/**\n * @param {import('./normalise-input').ToContent} input\n */\nasync function toBlob (input) {\n  // Bytes\n  if (isBytes(input)) {\n    return new Blob([input])\n  }\n\n  // String\n  if (typeof input === 'string' || input instanceof String) {\n    return new Blob([input.toString()])\n  }\n\n  // Blob | File\n  if (isBlob(input)) {\n    return input\n  }\n\n  // Browser stream\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input)\n  }\n\n  // (Async)Iterator<?>\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    /** @type {any} peekable */\n    const peekable = itPeekable(input)\n\n    /** @type {any} value **/\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      return itToBlob(peekable)\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    if (Number.isInteger(value)) {\n      return new Blob([Uint8Array.from(await all(peekable))])\n    }\n\n    // (Async)Iterable<Bytes|String>\n    if (isBytes(value) || typeof value === 'string' || value instanceof String) {\n      return itToBlob(peekable)\n    }\n  }\n\n  throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {AsyncIterable<BlobPart>|Iterable<BlobPart>} stream\n */\nasync function itToBlob (stream) {\n  const parts = []\n\n  for await (const chunk of stream) {\n    parts.push(chunk)\n  }\n\n  return new Blob(parts)\n}\n\nmodule.exports = toBlob\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}}],"sources":{"node_modules/ipfs-core-utils/src/files/normalise-input/normalise-content.browser.js":"'use strict'\n\nconst errCode = require('err-code')\nconst itPeekable = require('it-peekable')\nconst browserStreamToIt = require('browser-readablestream-to-it')\nconst all = require('it-all')\n\nconst {\n  isBytes,\n  isBlob,\n  isReadableStream\n} = require('./utils')\n\n/**\n * @param {import('./normalise-input').ToContent} input\n */\nasync function toBlob (input) {\n  // Bytes\n  if (isBytes(input)) {\n    return new Blob([input])\n  }\n\n  // String\n  if (typeof input === 'string' || input instanceof String) {\n    return new Blob([input.toString()])\n  }\n\n  // Blob | File\n  if (isBlob(input)) {\n    return input\n  }\n\n  // Browser stream\n  if (isReadableStream(input)) {\n    input = browserStreamToIt(input)\n  }\n\n  // (Async)Iterator<?>\n  if (Symbol.iterator in input || Symbol.asyncIterator in input) {\n    /** @type {any} peekable */\n    const peekable = itPeekable(input)\n\n    /** @type {any} value **/\n    const { value, done } = await peekable.peek()\n\n    if (done) {\n      // make sure empty iterators result in empty files\n      return itToBlob(peekable)\n    }\n\n    peekable.push(value)\n\n    // (Async)Iterable<Number>\n    if (Number.isInteger(value)) {\n      return new Blob([Uint8Array.from(await all(peekable))])\n    }\n\n    // (Async)Iterable<Bytes|String>\n    if (isBytes(value) || typeof value === 'string' || value instanceof String) {\n      return itToBlob(peekable)\n    }\n  }\n\n  throw errCode(new Error(`Unexpected input: ${input}`), 'ERR_UNEXPECTED_INPUT')\n}\n\n/**\n * @param {AsyncIterable<BlobPart>|Iterable<BlobPart>} stream\n */\nasync function itToBlob (stream) {\n  const parts = []\n\n  for await (const chunk of stream) {\n    parts.push(chunk)\n  }\n\n  return new Blob(parts)\n}\n\nmodule.exports = toBlob\n"},"lineCount":81}},"error":null,"hash":"a674bb8c3ada963cd3d74d5e842bd15b","cacheData":{"env":{}}}