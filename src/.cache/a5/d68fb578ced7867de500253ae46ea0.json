{"id":"node_modules/it-tar/extract.js","dependencies":[{"name":"/Users/gebruiker/Desktop/car-information-dapp/src/package.json","includedInParent":true,"mtime":1679887086003},{"name":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/it-tar/package.json","includedInParent":true,"mtime":1679887085123},{"name":"p-defer","loc":{"line":1,"column":22,"index":22},"parent":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/it-tar/extract.js","resolved":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/p-defer/index.js"},{"name":"./extract-headers","loc":{"line":2,"column":24,"index":57},"parent":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/it-tar/extract.js","resolved":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/it-tar/extract-headers.js"},{"name":"./lte-reader","loc":{"line":3,"column":26,"index":104},"parent":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/it-tar/extract.js","resolved":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/it-tar/lte-reader.js"}],"generated":{"js":"const defer = require('p-defer')\nconst Headers = require('./extract-headers')\nconst LteReader = require('./lte-reader')\n\nfunction getPadding (size) {\n  size &= 511\n  return size && 512 - size\n}\n\nasync function discardPadding (reader, size) {\n  const overflow = getPadding(size)\n  if (overflow) await reader.next(overflow)\n}\n\nmodule.exports = options => {\n  options = options || {}\n  options.highWaterMark = options.highWaterMark || 1024 * 16\n\n  return source => (async function * () {\n    const reader = LteReader(source)\n    let gnuLongPath, gnuLongLinkPath, paxGlobal, pax\n\n    try {\n      while (true) {\n        let headerBytes\n        try {\n          const { done, value } = await reader.next(512)\n          if (done) return\n          headerBytes = value\n        } catch (err) {\n          // Is ok, this is the end of the stream!\n          if (err.code === 'ERR_UNDER_READ') return\n          throw err\n        }\n\n        const header = Headers.decode(headerBytes, options.filenameEncoding)\n        if (!header) continue\n\n        if (header.type === 'gnu-long-path') {\n          const { done, value: gnuLongPathBytes } = await reader.next(header.size)\n          if (done) return\n          gnuLongPath = Headers.decodeLongPath(gnuLongPathBytes, options.filenameEncoding)\n          await discardPadding(reader, header.size)\n          continue\n        }\n\n        if (header.type === 'gnu-long-link-path') {\n          const { done, value: gnuLongLinkPathBytes } = await reader.next(header.size)\n          if (done) return\n          gnuLongLinkPath = Headers.decodeLongPath(gnuLongLinkPathBytes, options.filenameEncoding)\n          await discardPadding(reader, header.size)\n          continue\n        }\n\n        if (header.type === 'pax-global-header') {\n          const { done, value: paxGlobalBytes } = await reader.next(header.size)\n          if (done) return\n          paxGlobal = Headers.decodePax(paxGlobalBytes, options.filenameEncoding)\n          await discardPadding(reader, header.size)\n          continue\n        }\n\n        if (header.type === 'pax-header') {\n          const { done, value: paxBytes } = await reader.next(header.size)\n          if (done) return\n          pax = Headers.decodePax(paxBytes, options.filenameEncoding)\n          if (paxGlobal) pax = { ...paxGlobal, ...pax }\n          await discardPadding(reader, header.size)\n          continue\n        }\n\n        if (gnuLongPath) {\n          header.name = gnuLongPath\n          gnuLongPath = null\n        }\n\n        if (gnuLongLinkPath) {\n          header.linkname = gnuLongLinkPath\n          gnuLongLinkPath = null\n        }\n\n        if (pax) {\n          if (pax.path) header.name = pax.path\n          if (pax.linkpath) header.linkname = pax.linkpath\n          if (pax.size) header.size = parseInt(pax.size, 10)\n          header.pax = pax\n          pax = null\n        }\n\n        if (!header.size || header.type === 'directory') {\n          yield { header, body: (async function * () {})() }\n          continue\n        }\n\n        let bytesRemaining = header.size\n        const bodyConsumed = defer()\n\n        // Prefetch the first chunk.\n        // This allows us to stream entries for small files from the tar without\n        // explicitly streaming the body of each.\n        const firstChunk = await reader.nextLte(Math.min(bytesRemaining, options.highWaterMark))\n        bytesRemaining -= firstChunk.value.length\n\n        if (!bytesRemaining) bodyConsumed.resolve()\n\n        const body = (async function * () {\n          try {\n            yield firstChunk.value\n\n            while (bytesRemaining) {\n              const { done, value } = await reader.nextLte(bytesRemaining)\n              if (done) {\n                bytesRemaining = 0\n                return\n              }\n              bytesRemaining -= value.length\n              yield value\n            }\n          } finally {\n            bodyConsumed.resolve()\n          }\n        })()\n\n        yield { header, body }\n\n        // Wait for the body to be consumed\n        await bodyConsumed.promise\n\n        // Incase the body was not consumed entirely...\n        if (bytesRemaining) {\n          for await (const _ of body) {} // eslint-disable-line no-unused-vars,no-empty\n        }\n\n        await discardPadding(reader, header.size)\n      }\n    } finally {\n      await reader.return()\n    }\n  })()\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/it-tar/extract.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/it-tar/extract.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}}],"sources":{"node_modules/it-tar/extract.js":"const defer = require('p-defer')\nconst Headers = require('./extract-headers')\nconst LteReader = require('./lte-reader')\n\nfunction getPadding (size) {\n  size &= 511\n  return size && 512 - size\n}\n\nasync function discardPadding (reader, size) {\n  const overflow = getPadding(size)\n  if (overflow) await reader.next(overflow)\n}\n\nmodule.exports = options => {\n  options = options || {}\n  options.highWaterMark = options.highWaterMark || 1024 * 16\n\n  return source => (async function * () {\n    const reader = LteReader(source)\n    let gnuLongPath, gnuLongLinkPath, paxGlobal, pax\n\n    try {\n      while (true) {\n        let headerBytes\n        try {\n          const { done, value } = await reader.next(512)\n          if (done) return\n          headerBytes = value\n        } catch (err) {\n          // Is ok, this is the end of the stream!\n          if (err.code === 'ERR_UNDER_READ') return\n          throw err\n        }\n\n        const header = Headers.decode(headerBytes, options.filenameEncoding)\n        if (!header) continue\n\n        if (header.type === 'gnu-long-path') {\n          const { done, value: gnuLongPathBytes } = await reader.next(header.size)\n          if (done) return\n          gnuLongPath = Headers.decodeLongPath(gnuLongPathBytes, options.filenameEncoding)\n          await discardPadding(reader, header.size)\n          continue\n        }\n\n        if (header.type === 'gnu-long-link-path') {\n          const { done, value: gnuLongLinkPathBytes } = await reader.next(header.size)\n          if (done) return\n          gnuLongLinkPath = Headers.decodeLongPath(gnuLongLinkPathBytes, options.filenameEncoding)\n          await discardPadding(reader, header.size)\n          continue\n        }\n\n        if (header.type === 'pax-global-header') {\n          const { done, value: paxGlobalBytes } = await reader.next(header.size)\n          if (done) return\n          paxGlobal = Headers.decodePax(paxGlobalBytes, options.filenameEncoding)\n          await discardPadding(reader, header.size)\n          continue\n        }\n\n        if (header.type === 'pax-header') {\n          const { done, value: paxBytes } = await reader.next(header.size)\n          if (done) return\n          pax = Headers.decodePax(paxBytes, options.filenameEncoding)\n          if (paxGlobal) pax = { ...paxGlobal, ...pax }\n          await discardPadding(reader, header.size)\n          continue\n        }\n\n        if (gnuLongPath) {\n          header.name = gnuLongPath\n          gnuLongPath = null\n        }\n\n        if (gnuLongLinkPath) {\n          header.linkname = gnuLongLinkPath\n          gnuLongLinkPath = null\n        }\n\n        if (pax) {\n          if (pax.path) header.name = pax.path\n          if (pax.linkpath) header.linkname = pax.linkpath\n          if (pax.size) header.size = parseInt(pax.size, 10)\n          header.pax = pax\n          pax = null\n        }\n\n        if (!header.size || header.type === 'directory') {\n          yield { header, body: (async function * () {})() }\n          continue\n        }\n\n        let bytesRemaining = header.size\n        const bodyConsumed = defer()\n\n        // Prefetch the first chunk.\n        // This allows us to stream entries for small files from the tar without\n        // explicitly streaming the body of each.\n        const firstChunk = await reader.nextLte(Math.min(bytesRemaining, options.highWaterMark))\n        bytesRemaining -= firstChunk.value.length\n\n        if (!bytesRemaining) bodyConsumed.resolve()\n\n        const body = (async function * () {\n          try {\n            yield firstChunk.value\n\n            while (bytesRemaining) {\n              const { done, value } = await reader.nextLte(bytesRemaining)\n              if (done) {\n                bytesRemaining = 0\n                return\n              }\n              bytesRemaining -= value.length\n              yield value\n            }\n          } finally {\n            bodyConsumed.resolve()\n          }\n        })()\n\n        yield { header, body }\n\n        // Wait for the body to be consumed\n        await bodyConsumed.promise\n\n        // Incase the body was not consumed entirely...\n        if (bytesRemaining) {\n          for await (const _ of body) {} // eslint-disable-line no-unused-vars,no-empty\n        }\n\n        await discardPadding(reader, header.size)\n      }\n    } finally {\n      await reader.return()\n    }\n  })()\n}\n"},"lineCount":141}},"error":null,"hash":"21df3b9b64aa51adee0ce2646637f5a1","cacheData":{"env":{}}}