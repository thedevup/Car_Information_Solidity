{"id":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","dependencies":[{"name":"/Users/gebruiker/Desktop/car-information-dapp/src/package.json","includedInParent":true,"mtime":1680037715668},{"name":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/libp2p-crypto/package.json","includedInParent":true,"mtime":1679887284170},{"name":"./ecdh","loc":{"line":3,"column":21,"index":35},"parent":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","resolved":"/Users/gebruiker/Desktop/car-information-dapp/src/node_modules/libp2p-crypto/src/keys/ecdh-browser.js"}],"generated":{"js":"'use strict';\n\nvar ecdh = require('./ecdh');\n\n// Generates an ephemeral public key and returns a function that will compute\n// the shared secret key.\n//\n// Focuses only on ECDH now, but can be made more general in the future.\nmodule.exports = function (curve, callback) {\n  ecdh.generateEphmeralKeyPair(curve, callback);\n};"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":1,"column":0}},{"generated":{"line":1,"column":12},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":1,"column":12}},{"generated":{"line":3,"column":0},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":3,"column":0}},{"generated":{"line":3,"column":4},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":3,"column":6},"name":"ecdh"},{"generated":{"line":3,"column":8},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":3,"column":10}},{"generated":{"line":3,"column":11},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":3,"column":13},"name":"require"},{"generated":{"line":3,"column":18},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":3,"column":20}},{"generated":{"line":3,"column":19},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":3,"column":21}},{"generated":{"line":3,"column":27},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":3,"column":29}},{"generated":{"line":3,"column":28},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":3,"column":30}},{"generated":{"line":5,"column":0},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":5,"column":0}},{"generated":{"line":6,"column":0},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":6,"column":0}},{"generated":{"line":7,"column":0},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":7,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":8,"column":0}},{"generated":{"line":9,"column":0},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":9,"column":0},"name":"module"},{"generated":{"line":9,"column":6},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":9,"column":6}},{"generated":{"line":9,"column":7},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":9,"column":7},"name":"exports"},{"generated":{"line":9,"column":14},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":9,"column":14}},{"generated":{"line":9,"column":17},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":9,"column":17}},{"generated":{"line":9,"column":27},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":9,"column":18},"name":"curve"},{"generated":{"line":9,"column":32},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":9,"column":23}},{"generated":{"line":9,"column":34},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":9,"column":25},"name":"callback"},{"generated":{"line":9,"column":42},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":9,"column":33}},{"generated":{"line":9,"column":44},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":9,"column":38}},{"generated":{"line":10,"column":2},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":10,"column":2},"name":"ecdh"},{"generated":{"line":10,"column":6},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":10,"column":6}},{"generated":{"line":10,"column":7},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":10,"column":7},"name":"generateEphmeralKeyPair"},{"generated":{"line":10,"column":30},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":10,"column":30}},{"generated":{"line":10,"column":31},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":10,"column":31},"name":"curve"},{"generated":{"line":10,"column":36},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":10,"column":36}},{"generated":{"line":10,"column":38},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":10,"column":38},"name":"callback"},{"generated":{"line":10,"column":46},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":10,"column":46}},{"generated":{"line":10,"column":47},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":10,"column":47}},{"generated":{"line":11,"column":0},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":11,"column":0}},{"generated":{"line":11,"column":1},"source":"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js","original":{"line":11,"column":1}}],"sources":{"node_modules/libp2p-crypto/src/keys/ephemeral-keys.js":"'use strict'\n\nconst ecdh = require('./ecdh')\n\n// Generates an ephemeral public key and returns a function that will compute\n// the shared secret key.\n//\n// Focuses only on ECDH now, but can be made more general in the future.\nmodule.exports = (curve, callback) => {\n  ecdh.generateEphmeralKeyPair(curve, callback)\n}\n"},"lineCount":null}},"error":null,"hash":"23e78332853b2dab192174aaf5b6868a","cacheData":{"env":{}}}